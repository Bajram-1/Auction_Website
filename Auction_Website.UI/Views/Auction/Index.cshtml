@model List<Auction_Website.BLL.DTO.Requests.AuctionAddEditRequestModel>

@{
    ViewData["Title"] = "Current Auctions";
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}

<div class="container">
    <h2 class="mt-4">Current Auctions</h2>

    <table class="table table-striped mt-3">
        <thead class="table-dark">
            <tr>
                <th>Product</th>
                <th>Seller</th>
                <th>Top Bid</th>
                <th>Time Remaining</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="auctionTable">
            @foreach (var auction in Model)
            {
                if (auction.TimeRemaining.TotalSeconds > 0)
                {
                    <tr id="auctionRow_@auction.AuctionId" data-endtime="@auction.EndTime.ToString("o")">
                        <td>
                            <a asp-controller="Auction" asp-action="Details" asp-route-id="@auction.AuctionId">
                                @auction.Title
                            </a>
                        </td>
                        <td>@auction.SellerName</td>
                        <td>$@auction.CurrentHighestBid</td>
                        <td>
                            <span class="time-remaining" id="timeRemaining_@auction.AuctionId" data-endtime="@auction.EndTime.ToString("o")">
                                @{
                                    var ts = auction.TimeRemaining;
                                    if (ts.TotalSeconds <= 0)
                                    {
                                        @("Auction ended")
                                    }
                                    else if (ts.TotalDays >= 1)
                                    {
                                        int days = (int)ts.TotalDays;
                                        @($"{days} {(days == 1 ? "day" : "days")}")
                                    }
                                    else if (ts.TotalHours >= 1)
                                    {
                                        int hours = (int)ts.TotalHours;
                                        @($"{hours} {(hours == 1 ? "hour" : "hours")}")
                                    }
                                    else if (ts.TotalMinutes >= 1)
                                    {
                                        int minutes = (int)Math.Ceiling(ts.TotalMinutes);
                                        @($"{minutes} {(minutes == 1 ? "minute" : "minutes")}")
                                    }
                                    else
                                    {
                                        int seconds = (int)ts.TotalSeconds;
                                        @($"{seconds} {(seconds == 1 ? "second" : "seconds")}")
                                    }
                                }
                            </span>
                        </td>
                        <td>
                            @if (currentUserId == auction.CreatedByUserId)
                            {
                                <button class="btn btn-sm btn-danger" onclick="confirmDelete('@auction.AuctionId')">
                                    <i class="fa-solid fa-trash"></i> Delete
                                </button>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-between align-items-center mt-3">
        <a asp-controller="Auction" asp-action="Create" class="btn btn-success">
            <i class="fa-solid fa-plus"></i> New Auction
        </a>
        <p class="mb-0"><strong>Your Current Wallet:</strong> <span id="walletBalance">$@ViewBag.WalletBalance</span></p>
        <div class="pagination-container">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (ViewBag.PageNumber > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(ViewBag.PageNumber - 1)" asp-route-pageSize="@ViewBag.PageSize">Previous</a>
                        </li>
                    }
                    @for (int i = 1; i <= (ViewBag.TotalPages ?? 1); i++)
                    {
                        <li class="page-item @(i == (ViewBag.PageNumber ?? 1) ? "active" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@ViewBag.PageSize">@i</a>
                        </li>
                    }
                    @if ((ViewBag.PageNumber ?? 1) < (ViewBag.TotalPages ?? 1))
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(ViewBag.PageNumber + 1)" asp-route-pageSize="@ViewBag.PageSize">Next</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>

<script>
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/walletHub")
        .build();

    connection.start().then(function () {
        console.log("SignalR connected");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("AuctionClosed", function (auctionId) {
        var row = document.getElementById("auctionRow_" + auctionId);
        if (row) {
            $(row).fadeOut(500, function(){
                $(row).remove();
            });
        }
    });

    connection.on("ReceiveWalletUpdate", function (newBalance) {
        document.getElementById("walletBalance").innerText = "$" + newBalance.toFixed(2);
    });

        function updateCountdown() {
            $(".time-remaining").each(function () {
                var endTimeStr = $(this).data("endtime");
                if (endTimeStr) {
                    var endTime = new Date(endTimeStr);
                    var now = new Date();
                    var diff = endTime - now;
                    var countdownText = "";

                    if (diff <= 0) {
                        countdownText = "Auction ended";
                        $(this).closest("tr").fadeOut(500, function () {
                            $(this).remove();
                        });
                    } else {
                        var seconds = Math.floor((diff / 1000) % 60);
                        var minutes = Math.floor((diff / (1000 * 60)) % 60);
                        var hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
                        var days = Math.floor(diff / (1000 * 60 * 60 * 24));

                        if (days > 0) {
                            countdownText = days + " " + (days === 1 ? "day" : "days");
                            if (hours > 0) {
                                countdownText += " " + hours + " " + (hours === 1 ? "hour" : "hours");
                            }
                        } else if (hours > 0) {
                            countdownText = hours + " " + (hours === 1 ? "hour" : "hours");
                            if (minutes > 0) {
                                countdownText += " " + minutes + " " + (minutes === 1 ? "minute" : "minutes");
                            }
                        } else if (minutes >= 1) {
                            minutes = minutes + 1;
                            countdownText = minutes + " " + (minutes === 1 ? "minute" : "minutes");
                        } else if (seconds > 0) {
                            countdownText = seconds + " " + (seconds === 1 ? "second" : "seconds");
                        }
                        else
                        {
                            countdownText = "Auction ended";
                        }
                    }
                    $(this).text(countdownText);
                }
            });
        }

    $(document).ready(function () {
        updateCountdown();
        setInterval(updateCountdown, 1000);
    });

    function confirmDelete(auctionId) {
        swal({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {
                $.ajax({
                    url: "/Auction/Delete/" + auctionId,
                    type: "POST",
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    success: function (response) {
                        if (response.success) {
                            swal("Deleted!", "The auction has been deleted.", "success");
                            $("#auctionRow_" + auctionId).fadeOut(500, function () {
                                $(this).remove();
                            });
                        } else {
                            swal("Error!", "Failed to delete the auction.", "error");
                        }
                    },
                    error: function () {
                        swal("Error!", "Something went wrong.", "error");
                    }
                });
            }
        });
    }
</script>

<style>
    .pagination-container {
        position: relative;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        color: white;
        font-weight: bold;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 123, 255, 0.5);
    }
</style>